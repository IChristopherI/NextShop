import { zodResolver } from '@hookform/resolvers/zod';
import React from 'react';
import { FormProvider, useForm } from 'react-hook-form';
import { RegisterFormSchema, TRegisterFormSchema } from './schema';
import toast from 'react-hot-toast';
import FormInput from '@/src/components/shared/form-input';
import { registerUser } from '@/src/app/actions';
import { Button } from '@/src/components/ui/button';


interface Props  {
    className?: string;
}

const RegisterForm: React.FC<Props> = () => {
    const form = useForm<TRegisterFormSchema>({
        resolver: zodResolver(RegisterFormSchema),
        defaultValues: {
            name: '',
            email: '',
            password: '',
            confirmPassword: '',
        }
    })

    const onSubmit = async(data: TRegisterFormSchema) => {
        try {
            await registerUser({
                name: data.name,
                email: data.email,
                password: data.password,
            })
            toast.success('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ üìù');

        } catch (error) {
            console.log('REGISTER', error)
            toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üìù');
        }
    }

    return (
        <FormProvider {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)} className='flex flex-col gap-4 p-2'>
            <div className="text-center">
          <h1 className="text-2xl font-semibold">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
          <p className="text-gray-500 text-sm mt-1">–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
        </div>
                <FormInput name="email" placeholder="–ü–æ—á—Ç–∞" className="w-full"  />
                <FormInput name="name" placeholder="–ò–º—è" className="w-full" />
                <FormInput name="password" type="password" placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" className="w-full" />
                <FormInput name="confirmPassword" type="password" placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" className="w-full" />

                <Button type="submit">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Button>
            </form>
        </FormProvider>
    );
};

export default RegisterForm;